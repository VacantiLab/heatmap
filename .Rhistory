theme(legend.title=element_blank()) +
theme(legend.key=element_rect(fill=NA)) +
theme(legend.text = element_text(colour="black", size = 6)) +
#theme(legend.position=LegendPosition) +
theme(legend.key.size = unit(0.3, "cm")) + #Space between legend symbols and text, maybe?
theme(legend.background = element_rect(fill="transparent",linetype = 0,colour = 'transparent')) +
labs(x=AxisLabels[1]) +
labs(y=AxisLabels[2])
#geom_smooth(method = "lm", se = FALSE, col='red') + #the fitline?
#annotate("text",x=CorrelationLabelPosition[1],y=CorrelationLabelPosition[2],label=paste('PC = ',pearson_coefficient,' [',pearson_95_confidence[1],', ',pearson_95_confidence[2],']','\n','SC = ',spearman_coefficient,' [',spearman_p_value,']',sep=''),col='red',size=2.5,hjust=0,vjust=1)
#annotate("text",x=CorrelationLabelPosition[1],y=CorrelationLabelPosition[2],label=paste('PC = ',pearson_coefficient,' [',pearson_95_confidence[1],', ',pearson_95_confidence[2],']',sep=''),col='red',size=3,hjust=0,vjust=1)
print('work!') #There needs to be something in between ggplot call and ggsave call inside a function. This is some sort of bug in ggplot/ggsave
ggsave(paste(volcano_directory,'volcano.pdf',sep=''), width = PlotDimensions[1], height = PlotDimensions[2], dpi = 120)
#rm(DATA_t_annotated) #remove specified global variable so global environment n
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
DATA <- read.table(file=data_file,head=TRUE,check.names=FALSE,sep='\t') #check.names=FALSE prevents an 'X' from being added to the numeric column names
#Name the rows of the data frame as the genes given in the first column of the data frame
RowNames <- as.character(DATA[,1])
rownames(DATA) <- RowNames
DATA[,1] <- NULL #remove the first column of the data frame as it is no longer needed
gene_names <- rownames(DATA)
patient_names <- colnames(DATA)
DATA_t <- t(DATA)
DATA_t <- as.data.frame(DATA_t)
GROUP_DESIGNATIONS <- read.table(file=group_designations_file,head=TRUE,check.names=FALSE,sep='\t',stringsAsFactors=FALSE) #check.names=FALSE prevents changing special characters
RowNames <- as.character(GROUP_DESIGNATIONS[,1])
rownames(GROUP_DESIGNATIONS) <- RowNames
GROUP_DESIGNATIONS[,1] <- NULL #remove the first column of the data frame as it is no longer needed
GROUP_DESIGNATIONS[,1:3]
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
rm(list = setdiff(ls(), lsf.str()))
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
data_file <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Proteome_Quantification_Data/Breast_Cancer_Cohort_Proteome.txt'
volcano_directory <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Basal Class Characterization/Volcano Plots/'
group_designations_file <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Proteome_Quantification_Data/Proteome_All_Groupings.txt'
group_divisions[[2]] <- c('normal like','luminal a', 'luminal b', 'her2')
group_divisions <- list(c('basal'),c('her2','normal like','luminal a','luminal b'))
group_designations_scheme <- 'PAM50'
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
group_designations_file
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
rm(list = setdiff(ls(), lsf.str()))
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
data_file <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Proteome_Quantification_Data/Breast_Cancer_Cohort_Proteome.txt'
volcano_directory <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Basal Class Characterization/Volcano Plots/'
group_designations_file <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/Breast_Cancer_Patient_Tumors/Proteome_Quantification_Data/Proteome_All_Groupings.txt'
group_divisions <- list(c('basal'),c('her2','normal like','luminal a','luminal b'))
group_designations_scheme <- 'PAM50'
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
remove(MakeVolcanoPlot())
remove('MakeVolcanoPlot')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
group1_members
length(group1_members)
sum(group1_members)
group2_members
sum(group2_members)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
DATA[1,group1_members]
class(DATA[1,group1_members])
meadian(DATA[1,group1_members])
median(DATA[1,group1_members])
median(as.numeric(DATA[1,group1_members]))
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
length(DATA_annotated$ratio)
DATA_annotated_less_groups <- DATA_annotated[-'groups',]
DATA_annotated_less_groups <- DATA_annotated[-c('groups'),]
DATA_annotated_less_groups <- DATA_annotated[-c('group'),]
DATA_annotated_less_groups <- DATA_annotated[gene_names,]
DATA_annotated_less_groups[1:5,1:5]
debugSource('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
DATA_annotated_less_groups[1:5,1:5]
length(DATA_annotated_less_groups$`OSL2U-0351`)
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/MakeVolcanoPlot.R')
MakeVolcanoPlot(data_file,volcano_directory,group_designations_file,group_divisions,group_designations_scheme)
library(chron)
install.packages("chron")
install.packages("RColorBrewer")
install.packages("lattice")
install.packages("ncdf")
install.packages("ncdf4")
library(ncdf4)
ncin <- nc_open('/Users/Nate/Desktop/TBDMS01_A549_UGlc_NTKD.CDF')
print(ncin)
ncin$id
mz <- ncvar_get(ncin,"mass_values")
class(mz)
size(mz)
length(mz)
mz[1,1]
mz
mz[1:10]
mz[1:100]
t <- ncvar_get(ncin,"time_values")
t
t[1]
print(ncin)
t <- ncvar_get(ncin,"scan_acquisition_time")
t[1]
t[2]
t[3]
sa <- ncvar_get(ncin,"scan_acquisition")
scan <- ncvar_get(ncin,"actual_scan_number")
scan[1]
scan[2]
scan[3]
length(scan)
length(t)
length(m/z)
length(mz)
mz[1:100]
scan_duration <- ncvar_get(ncin,"scan_duration")
scan_duration[1]
scan_duration[2]
length(scan_duration)
scan_duration[7357]
scan_index <- ncvar_get(ncin,"scan_index")
length(scan_index)
scan_index[1]
scan_index[2]
scan_index[3]
scan_min <- ncvar_get(ncin,"mass_range_min")
scan_min[1]
length(scan_min)
scan_min[2]
scan_min[3]
scan_min[4]
scan_min[7357]
scan_min <- ncvar_get(ncin,"mass_range_max")
scan_min[2]
scan_min[4]
scan_min[7357]
scan_min[0]
scan_min[1]
scan_min[2]
mz[1:300]
mz_round <- round(mz, digits = 0)
mz_round[1:100]
num_scans <- mz_round[mz_round==101]
num_scans <- length(mz_round[mz_round==101])
num_scans
sum(scan_index)
class(scan_index)
scan_index_numeric <- as.numeric(scan_index)
sum(scan_index_numeric)
length(scan_index_numeric)
scan_index_numeric[7357]
scan_index_numeric[6881]
scan_index_numeric[6880]
scan_index[2]
scan_index[3]
m/z[148]
mz[148]
mz[149]
scan_index_guess <- mz_round[mz_round==101]
scan_index_guess[1]
scan_index_guess[2]
length(scan_index)
scan_index(7357)
scan_index[7357]
length(mz)
mz[890606+1]
NetCDF_data <- nc_open('/Users/Nate/Desktop/TBDMS01_A549_UGlc_NTKD.CDF')
library(ncdf4)
NetCDF_data <- nc_open('/Users/Nate/Desktop/TBDMS01_A549_UGlc_NTKD.CDF')
print(NetCDF_data)
unique(c(1,2,3,3,4,4,5))
mass_values[1]
NetCDF_data$mass_values[1]
NetCDF_data$var
print(NetCDF_data)
mass_values <- ncvar_get(NetCDF_data,'mass_values')
mass_values[2]
mz_whole <- unique(round(mass_values))
mz_whole
class(mz_whole)
class(mz_whole[1])
class(c(1,2,3,4.5))
time_values <- ncvar_get(NetCDF_data,'time_values')
time_values[1]
scan_acquisition_time <- ncvar_get(NetCDF_data,'scan_acquisition_time')
scan_acquisition_time[1]
scan_acquisition_time[2]
source('~/.active-rstudio-document')
scan_acquisition_time <- ncvar_get(NetCDF_data,'scan_acquisition_time')/60 #minutes
scan_acquisition_time[1]
scan_acquisition_time[2]
mass_values <- ncvar_get(NetCDF_data,'mass_values')
mass_values <- ncvar_get(NetCDF_data,'mass_values')
mass_values_whole <- round(mass_values)
mz_whole <- unique(mass_values_whole)
total_intensity <- ncvar_get(NetCDF_data,'total_intensity')
length(total_intensity)
intensity_values <- ncvar_get(NetCDF_data,'intensity_values')
length(intensity_values)
mz_whole_unique <- unique(mass_values_whole)
n_mz <- length(mz_whole_unique)
n_sat <- length(scan_acquisition_time)
n_mz
n_sat
mz_time_intensity <- matix(NULL,nrow=n_mz,ncol=n_sat)
mz_time_intensity <- matrix(NULL,nrow=n_mz,ncol=n_sat)
mz_time_intensity <- matrix(,nrow=n_mz,ncol=n_sat)
mz_time_intensity[1:5,1:5]
rownames(mz_time_intensity) <- mz_whole_unique
mz_time_intensity[1:5,1:5]
mz_time_intensity['101',][1:5]
colnames(mz_time_intensity) <- scan_acquisition_time
mz_time_intensity[1:5,1:5]
scan_acquisition_time <- ncvar_get(NetCDF_data,'scan_acquisition_time') #minutes
colnames(mz_time_intensity) <- scan_acquisition_time
mz_time_intensity[1:5,1:5]
scan_index <- ncvar_get(NetCDF_data,'scan_index')
scan_index[1]
n_scans <- length(scan_index)
saq_value_current_scan <- scan_acquisition_time[i]
i=1
saq_value_current_scan <- scan_acquisition_time[i]
rownames(mz_time_intensity)
class(rownames(mz_time_intensity))
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
current_scan_start <- scan_index[i]+1
current_scan_end <- scan_index[i+1]
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
mz_time_intensity[1:10,1:5]
1 ~= 2
n_total_measurements <- length(intensity_values)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
n_total_measurements
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
mz_time_intensity[1:10,1:5]
mz_time_intensity[1:10,n_scans-3:n_scans]
mz_time_intensity[1:10,4:6]
n_scans
mz_time_intensity[1:10,7355:7357]
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
for (i in 1:n_scans)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:10)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:1000)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:n_scans-1)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
n_scans-1
for (i in 1:7356)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:7357)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:n_scans)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
#mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
for (i in 1:n_scans)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- scan_index[n_total_measurements]}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
#intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
#mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
n_total_measurements
length(mass_values_whole)
for (i in 1:n_scans)
{
current_scan_start <- scan_index[i]+1
if (i!=n_scans) {current_scan_end <- scan_index[i+1]}
if (i==n_scans) {current_scan_end <- n_total_measurements}
saq_value_current_scan <- scan_acquisition_time[i]
mzs_of_current_scan <- mass_values_whole[current_scan_start:current_scan_end]
intensity_values_current_scan <- intensity_values[current_scan_start:current_scan_end]
mz_time_intensity[as.character(mzs_of_current_scan),as.character(saq_value_current_scan)] <- intensity_values_current_scan
}
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
mz_time_intensity[1:10,1:5]
mz_time_intensity[160:200,1:5]
mz_whole_unique
mz_whole_unique <- sort(mz_whole_unique,decreasing=FALSE)
mz_whole_unique
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
mz_time_intensity[160:200,1:5]
mass_values[1:100]
par(mfrow=c(3,1))
plot(scan_acquisition_time,mz_time_intensity['459'])
plot(scan_acquisition_time,mz_time_intensity['591'])
plot(scan_acquisition_time,mz_time_intensity['592'])
plot(scan_acquisition_time,mz_time_intensity['459',])
plot(scan_acquisition_time,mz_time_intensity['591',])
plot(scan_acquisition_time,mz_time_intensity['592',])
stacked_plots <- par(mfrow=c(3,1))
plot(scan_acquisition_time,mz_time_intensity['459',])
plot(scan_acquisition_time,mz_time_intensity['591',])
plot(scan_acquisition_time,mz_time_intensity['592',])
pdf('/Users/Nate/Desktop/ms_output.pdf','stacked_plots')
pdf('/Users/Nate/Desktop/ms_output.pdf','stacked_plots',width=6,height=10)
pdf('/Users/Nate/Desktop/ms_output.pdf','stacked_plots',width=6,height=10)
pdf('/Users/Nate/Desktop/ms_output.pdf',width=6,height=10)
pdf('/Users/Nate/Desktop/ms_output.pdf',width=6,height=10)
plot1 <- plot(scan_acquisition_time,mz_time_intensity['459',])
pdf('/Users/Nate/Desktop/ms_output.pdf',width=6,height=10)
plot1 <- plot(scan_acquisition_time,mz_time_intensity['459',])
pdf('/Users/Nate/Desktop/ms_output.pdf',width=6,height=10)
plot(scan_acquisition_time,mz_time_intensity['591',])
rm(list = setdiff(ls(), lsf.str()))
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/NetCDF_Integrate_Scripts/Integrate_NetCDF.R')
g <- matrix(c(2,3,4,5,6,7),nrow=2)
g
lapply(g,sum)
apply(g,sum)
apply(g,sum,1)
apply(g,1,sum)
g
h <- list(c(2,3,4),c(5,6,7))
lapply(h,1,sum)
lapply(h,sum)
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/GetDerivs.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/FindPeaksMins.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/FindPeakBorders.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/fat_matrix_to_long_df.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/BaselineCorrect.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/Integrate_NetCDF.R')
g
as.list(g)
as.list(g[])
as.list(g[,])
lapply(g, function(i) g[i,])
g
lapply(seq_len(nrow(g)), function(x) g[x,])
lapply(1:nrow(g), function(i) g[i,])
mz_time_intensity_list <- lapply(1:nrow(mz_time_intensity), function(i) mz_time_intensity[i,])
library(parallel)
detectCores()
mz_time_intensity_list <- lapply(1:nrow(mz_time_intensity), function(i) mz_time_intensity[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
BaselineCorrect_return_par <- parLapply(mz_time_intensity_list,BaselineCorrect,scan_acquisition_time,2)
cl
BaselineCorrect_return_par <- parLapply(mz_time_intensity_list,BaselineCorrect,scan_acquisition_time,2)
checkCluster(cl)
BaselineCorrect_return_par <- parLapply(cl,mz_time_intensity_list,BaselineCorrect,scan_acquisition_time,2)
t_start_baseline_parallel <- proc.time()[3] #begin timing baseline correct in parallel
mz_time_intensity_list <- lapply(1:nrow(mz_time_intensity), function(i) mz_time_intensity[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
BaselineCorrect_return_par <- parLapply(cl,mz_time_intensity_list,BaselineCorrect,scan_acquisition_time,2)
stopCluster(cl)
t_elapsed_baseline_parallel <- (proc.time()[3]-t_start_script) #end timing baseline correct in parallel
t_elapsed_baseline_parallel
t_start_baseline_parallel <- proc.time()[3] #begin timing baseline correct in parallel
mz_time_intensity_list <- lapply(1:nrow(mz_time_intensity), function(i) mz_time_intensity[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
BaselineCorrect_return_par <- parLapply(cl,mz_time_intensity_list,BaselineCorrect,scan_acquisition_time,2)
stopCluster(cl)
t_elapsed_baseline_parallel <- (proc.time()[3]-t_start_baseline_parallel) #end timing baseline correct in parallel
t_elapsed_baseline_parallel
t_start_baseline_series <- proc.time()[3] #begin timing baseline correct in series
BaselineCorrect_return <- apply(mz_time_intensity,1,BaselineCorrect,scan_acquisition_time,2)
t_elapsed_baseline_series <- (proc.time()[3]-t_start_baseline_series) #end timing baseline correct in parallel
t_elapsed_baseline_series
mz_time_intensity_list <- lapply(1:nrow(mz_time_intensity), function(i) mz_time_intensity[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
cl <- makeCluster(n_cores_to_use)
stopCluster(cl)
YB_list <- lapply(1:nrow(YB), function(i) YB[i,])
t_start_peak_parallel <- proc.time()[3] #begin timing baseline correct in parallel
YB_list <- lapply(1:nrow(YB), function(i) YB[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
FindPeaksMinReturn_par <- parLapply(cl,YB,FindPeaksMins,scan_acquisition_time)
stopCluster(cl)
t_elapsed_peak_parallel <- (proc.time()[3]-t_start_peak_parallel) #end timing baseline correct in parallel
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/GetDerivs.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/FindPeaksMins.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/FindPeakBorders.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/fat_matrix_to_long_df.R')
source('~/Dropbox/Research/Lehtio_Laboratory/Tools/R Functions/NetCDF_Integrate_Scripts_dev_parallel_nate/BaselineCorrect.R')
t_start_peak_parallel <- proc.time()[3] #begin timing baseline correct in parallel
YB_list <- lapply(1:nrow(YB), function(i) YB[i,])
n_cores_to_use <- detectCores()-1
cl <- makeCluster(n_cores_to_use)
FindPeaksMinReturn_par <- parLapply(cl,YB,FindPeaksMins,scan_acquisition_time)
stopCluster(cl)
t_elapsed_peak_parallel <- (proc.time()[3]-t_start_peak_parallel) #end timing baseline correct in parallel
getwd()
setwd('/Users/Nate/git_hub_projects/heatmap')
data_location <- '/Users/Nate/Dropbox/Research/Lehtio_Laboratory/Projects/breast_cancer/patient_tumors/lehtio_lab_landscape_study/Proteome_Quantification_Data/'
source('initialize_heatmap.R')
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2'),list(c('basal),c('lumb')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2'),list(c('basal'),c('lumb')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2'),c('basal','lumb'),NULL)
traceback()
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('MPC2'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','DEPTOR'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('PRR5'),c('basal','lumb'),NULL)
traceback()
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('PRR5','MTOR'),c('basal','lumb'),NULL)
traceback()
source('initialize_heatmap.R')
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('PRR5','MTOR'),c('basal','lumb'),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2'),list(c('basal'),c('lumb')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2','PDK1'),list(c('basal'),c('lumb')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2','PDK1'),list(c('basal'),c('lumb')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2','PDK1'),list(c('basal'),c('lumb','luma','her2','norm')),NULL)
bp <- MakeBoxPlot(data_location,'pam50','log2',NULL,c('RICTOR','MLST8','MAPKAP1','PRR5','DEPTOR','MTOR','TTI1','TELO2','PDK1','PDK2','PDK3','PDK4'),list(c('basal'),c('lumb','luma','her2','norm')),NULL)
